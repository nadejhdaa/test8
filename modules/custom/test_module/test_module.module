<?php
   
  // We use File functions and our custom class XMLBatchImport
  use Drupal\file\Entity\File;
  use Drupal\test_module\XMLBatchImport;

  /**
   * @file
   * Implement hook_cron().
   */

function test_module_cron() {

  // We access our configuration.
  $config = \Drupal::config('test_module.settings');

  // Get fid of XML file
  $fid = $config->get('fid');
  $import = new XMLBatchImport($fid);
  $import->setBatch();
 
  // Get cron interval
  $interval = $config->get('interval');
  $interval = !empty($interval) ? $interval : 300;
  
  // Check it`s time to next execution of import from xml to db
  $next_execution = \Drupal::state()->get('test_module.cron_next_execution');
  $next_execution = !empty($next_execution) ? $next_execution : 0;

  // If time to load data from xml
  if (REQUEST_TIME >= $next_execution) {

    // Load XML-file object
    $file = File::load($fid);

    // If file exists load it`s products data into DB
    if($file) {

      # Clear DB table from old records before import 
      $query = \Drupal::database()->delete('test_module');
      $query->execute();

      // Create new queue with id "test_module_queue"
      $queue = \Drupal::queue('test_module_queue');

      // Load last saved XML-file and convert xml data to array
      $filepath = drupal_realpath($file->getFileUri());
      $xml = simplexml_load_file($filepath); 
      $json = json_encode($xml);
      $data =  json_decode($json,true);

      foreach ($data['Product'] as $item) {
        // Send item to queue.
        $queue->createItem($item);
      }
       
    }

    // Record in db log that cron test_module task is ran
    \Drupal::logger('test_module')->notice('cron_test_module ran');
    if (\Drupal::state()->get('cron_test_module_show_status_message')) {
      \Drupal::messenger()->addMessage(t('test_module executed at %time', ['%time' => date_iso8601(REQUEST_TIME)]));
      \Drupal::state()->set('cron_test_module_show_status_message', FALSE);
    }
    \Drupal::state()->set('test_module.cron_next_execution', REQUEST_TIME + $interval);
  }

}

